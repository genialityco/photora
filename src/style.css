/* Fondo de toda la página */
body {
  margin: 0;              /* elimina márgenes para cubrir todo */
  padding: 0;
  background: url('/assets/FONDO_INICIO.png') no-repeat center center fixed;
  background-size: cover;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

.videoView {
  float: none;
  width: auto;
  margin: 0;
  position: static;
}

/* --- Square webcam + canvas centrados y espejo --- */
#webcam,
#output_canvas {
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 100vh;
  height: 100vh;
  object-fit: cover;
  transform: translate(-50%, 0) rotateY(180deg);
  -webkit-transform: translate(-50%, 0) rotateY(180deg);
  -moz-transform: translate(-50%, 0) rotateY(180deg);
  z-index: 1;
}

/* Opcional: esconde las líneas de “canvas” generadas por detectOnClick */
.canvas {
  display: none;
  background-color: transparent !important;
}


/* 1) El overlay completo sobre la cámara */
#demos {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;         /* por encima del video/canvas */
  pointer-events: none; /* deja pasar clicks al video si quieres */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* 2) El contenedor de video: ocupa todo el espacio y puede recibir eventos */
#demos .videoView {
  position: relative;
  width: 100%;
  height: 100%;
  float: none;
  margin: 0;
  pointer-events: auto;
}



#webcam {
  display:none; /* Esconde el video original */
}

/* 4) Tus blend-shapes encima, con mayor z-index */
#demos .blend-shapes {
  position: absolute;
  bottom: 1em;
  left: 1em;
  z-index: 11;
  pointer-events: auto;
  background: rgba(0,0,0,0.5);
  padding: 0.5em;
  border-radius: 4px;
  max-height: 30%;
  overflow-y: auto;
}
